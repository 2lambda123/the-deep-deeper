version: '3.2'


x-server: &base_server_setup
  build:
    context: ./server/
  # To attach to container with stdin `docker attach <container_name>`
  # Used for python debugging.
  stdin_open: true
  tty: true
  environment: &base_server_environment
    DJANGO_DEBUG: True
    DEEP_ENVIRONMENT: development
    DEEP_FRONTEND_HOST: localhost:3000
    DEEP_FRONTEND_ARY_HOST: localhost:3001
    DJANGO_ALLOWED_HOST: localhost
    SESSION_COOKIE_DOMAIN: localhost
    CSRF_COOKIE_DOMAIN: localhost
    EMAIL_FROM: dev@thedeep.io
    # From db.environment
    DATABASE_NAME: deep
    DATABASE_USER: postgres
    DATABASE_PASSWORD: postgres
    DATABASE_PORT: 5432
    DATABASE_HOST: db
    # From redis
    CELERY_REDIS_URL: redis://redis:6379/0
    DJANGO_CACHE_REDIS_URL: redis://redis:6379/2
    # HID
    HID_CLIENT_ID: deep-local
    HID_CLIENT_REDIRECT_URL: http://localhost:3000/login/
    HID_AUTH_URI: https://api2.dev.humanitarian.id
  env_file:
    - server.env
  volumes:
    - ./server/:/code
    - media:/media
  depends_on:
    db:
      condition: service_healthy
    redis:
      condition: service_healthy

services:
  db:
    image: postgis/postgis:13-3.1-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: deep
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6-alpine
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    <<: *base_server_setup
    image: docker.pkg.github.com/the-deep/server/web:latest
    build:
      context: ./server/
      target: web
    environment:
      <<: *base_server_environment
      SERVICE_ENVIRONMENT_TYPE: web
    command: bash -c '/code/scripts/run_web.sh'
    ports:
      - '8000:8000'

  worker:
    <<: *base_server_setup
    image: docker.pkg.github.com/the-deep/server/worker:latest
    build:
      context: ./server/
      target: worker
    environment:
      <<: *base_server_environment
      SERVICE_ENVIRONMENT_TYPE: worker
    command: bash -c '/code/scripts/run_worker.sh'
    healthcheck:
      test: ["CMD-SHELL", "celery -A deep inspect ping -d celery@$$HOSTNAME || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

  client:
    image: docker.pkg.github.com/the-deep/client:latest
    build:
      context: ./client/
    tty: true
    environment:
      GRAPHQL_CODEGEN_ENDPOINT: http://localhost:8000/graphql
      REACT_APP_GRAPHQL_ENDPOINT: http://localhost:8000/graphql
      REACT_APP_API_END: localhost:8000
      REACT_APP_ADMIN_END: localhost:8000
      REACT_APP_DEEP_ENVIRONMENT: development
    env_file:
      - client.env
    command: bash -c '/code/scripts/run_develop.sh'
    volumes:
      - ./client/:/code
    ports:
      - '3000:3000'
      - '5000:5000'

volumes:
  media:
  postgres-data:
  redis-data:
